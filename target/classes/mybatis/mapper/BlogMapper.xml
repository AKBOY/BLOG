<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--    namespace（命名空间）绑定一个持久层的接口，包名要和接口的包名一致-->
<mapper namespace="com.chuyx.mapper.BlogMapper">
    <!--    开启二级缓存-->
    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

<!--    所有博客-->
    <select id="queryAllBlog" resultType="blog">
        select * from blog
    </select>

<!--    博客总数-->
    <select id="queryAllBlogSize" resultType="int">
        select count(*) from blog
    </select>

<!--    根据类别找博客-->
    <select id="queryBlogByCateId" resultType="blog">
        select * from blog where category_id = #{categoryId}
    </select>


<!--    最新博客-->
    <select id="queryNewBlog" resultType="blog">
        SELECT * from blog ORDER BY release_date desc LIMIT 0,8;
    </select>

<!--    根据id找博客-->
    <select id="queryBlogById" resultType="blog">
        select * from blog where id = #{id}
    </select>

<!--    更新访问次数-->
    <update id="updateBlogVisitCount" parameterType="java.lang.Integer">
        UPDATE blog set visit_count = #{visitCount} where id = #{id};
    </update>

<!--    根据类别id找类别博客-->
    <select id="queryCapacityBlog" resultType="blog" parameterType="int">
        select * from blog where category_id = #{capaId}
    </select>
    
<!--    分页查询-->
    <select id="queryBlogByPage" resultType="blog" parameterType="int">
        select * from blog limit #{index},#{size}
    </select>
    
    <select id="countSize" resultType="int">
        select count(*) from blog
    </select>

    <select id="queryBlogByPageCata" resultType="blog" parameterType="int">
        select * from blog where category_id = #{cataId} limit #{index},#{size}
    </select>

    <select id="countSizeCata" resultType="int" parameterType="int">
        select count(*) from blog where category_id = #{id}
    </select>

    <select id="queryBlogSearch" parameterType="string" resultType="blog">
        select * from blog where title like #{name} order by release_date limit 0,5
    </select>

    <insert id="addBlog" parameterType="newBlogDTO">
        insert into blog(uid, release_date, title, small_title, category_id, visit_count, content)
         values (#{uid},now(),#{title},#{smallTitle},#{catecoty},0,#{content})
    </insert>

    <select id="queryBlogByAuthorId" resultType="blog" parameterType="int">
        select * from blog where uid = #{uid} limit 0,10
    </select>

    <select id="queryBlogByAuthorIdCount" resultType="int" parameterType="int">
        select count(*) from blog where uid = #{uid}
    </select>

    <select id="queryBlogByAuthorIdPage" resultType="blog" parameterType="int">
        select * from blog where uid = #{uid} limit #{index},#{pageSize}
    </select>

    <delete id="delBlog" parameterType="int">
        delete from blog where id = #{id}
    </delete>

    <update id="updateBlog" parameterType="newBlogDTO">
        update blog
         set release_date = #{repleseaDate},title = #{title}, small_title = #{smallTitle},
             content = #{content}, category_id = #{catecoty}
         where id = #{id}
    </update>

    <select id="getAllCommentsSize" resultType="int">
        select count(*) from comments
    </select>

</mapper>